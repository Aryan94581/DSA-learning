*******Rotate Array 189*********
import java.util.Arrays;
class Solution {
    public void rotate(int[] nums, int k) {
        
        int n = nums.length;
        int m = k%n; 
        reverse(nums, 0 , n-1);
        reverse(nums, 0, m-1);
        reverse(nums, m, n-1);
        
        System.out.println(Arrays.toString(nums));
    }
    public static void reverse(int[] array, int start, int end){

        while(start <= end){
            int temp= array[start];
            array[start]= array[end];
            array[end] = temp;
            start++;
            end--;
        }
    }
}

********** shuffle Array  1470 *********
class Solution {
    public int[] shuffle(int[] nums, int n) {
        if(n <= 1){
            return nums;
        }
        int l = nums.length;
        int[] arr = new int[l];
        int j = 0;
        for(int i = 0;i < l-1;i+=2){
                arr[i] = nums[j];
                arr[i+1] = nums[j+n];
                j++;
        }
        return arr;
    }
}
//744 next grest Letter in a Array of char
class Solution {
    public char nextGreatestLetter(char[] letters, char target) {
        
        int start = 0;
        int end = letters.length-1;
        while(start <= end){
            int mid = start + (end-start)/2;
            if(target < letters[mid]){
                end = mid-1;
            }else {
                start = mid+1;
            }
        }
        return letters[start % (letters.length)];
    }
}